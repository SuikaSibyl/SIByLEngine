#version 460
#extension GL_EXT_scalar_block_layout : require
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_shader_16bit_storage : require
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require

struct PushConstants { 
    uvec2 resolution;
    float weight;
};
layout(push_constant) uniform PushConsts { PushConstants pushConstants; };

layout(binding = 0, set = 0, r32f) uniform image2D inputImage;
layout(binding = 1, set = 0, r32f) uniform image2D summedImage;

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

void main() {
    // The resolution of the image, which is the same as the launch size:
    const ivec2 resolution = ivec2(pushConstants.resolution);
    const ivec2 pixel = ivec2(gl_GlobalInvocationID.xy);
    // If the pixel is outside of the image, don't do anything:
    if((pixel.x >= resolution.x) || (pixel.y >= resolution.y)) {
        return;
    }

    const float sum = imageLoad(summedImage, ivec2(0)).x;
    const float avg = sum / (pushConstants.resolution.x * pushConstants.resolution.y);
    
    float imp = imageLoad(inputImage, ivec2(pixel)).x;
    imp = max(imp - pushConstants.weight * avg, 0.0f);

    imageStore(inputImage, ivec2(pixel), vec4(imp));
}