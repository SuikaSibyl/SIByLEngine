#ifndef _SRENDERER_GLSLI_MATMUL_HEADER_
#define _SRENDERER_GLSLI_MATMUL_HEADER_

#extension GL_KHR_memory_scope_semantics: require
#extension GL_EXT_control_flow_attributes: require
#extension GL_NV_cooperative_matrix: require
#extension GL_EXT_shader_explicit_arithmetic_types: require
#extension GL_EXT_shader_explicit_arithmetic_types_float16: require

// Warp and block size definition
#define WARP_SIZE                32
#define NUM_THREAD_PER_BLOCK     128
#define NUM_WARPS_PER_BLOCK      (NUM_THREAD_PER_BLOCK / WARP_SIZE)

// Size boundary of input and output matrix
#define SIZE_BOUNDARY            16
#define MAX_WT_MATRIX_SIZE       NUM_THREAD_PER_BLOCK * SIZE_BOUNDARY
#define MAX_INOUT_BUFFER_SIZE    NUM_THREAD_PER_BLOCK * SIZE_BOUNDARY
#define WEIGHTS_BUFFER_SIZE      NUM_WARPS_PER_BLOCK * MAX_WT_MATRIX_SIZE

// Define the shared memory buffer
shared float16_t _shared_inputs_buffer[MAX_INOUT_BUFFER_SIZE];
shared float16_t _shared_weights_buffer[WEIGHTS_BUFFER_SIZE];
shared float _shared_output_buffer[MAX_INOUT_BUFFER_SIZE];

#define INPUT_BUFFER_RESOURCE   _shared_inputs_buffer
#define WEIGHTS_BUFFER_RESOURCE _shared_weights_buffer
#define OUTPUT_BUFFER_RESOURCE  _shared_output_buffer

// Tile size, where we do MXK * KXN = MXN.
// each tiled matrix multiplication uses WMMA API
#define M                        16
#define N                        8
#define K                        8

void set_input_buffer_glsl(int i, float16_t value) {
   _shared_inputs_buffer[i] = value;
}
float16_t get_input_buffer_glsl(int i) {
   return _shared_inputs_buffer[i];
}

void set_weights_buffer_glsl(int i, float16_t value) {
   _shared_weights_buffer[i] = value;
}
float16_t get_weights_buffer_glsl(int i) {
   return _shared_weights_buffer[i];
}

float get_output_buffer_glsl(int i) {
   return _shared_output_buffer[i];
}

#undef IN_MATRIX_SIZE 
#undef WT_MATRIX_SIZE 
#undef OUT_MATRIX_SIZE

#define INPUT_BUFFER_RESOURCE   _shared_inputs_buffer
#define WEIGHTS_BUFFER_RESOURCE _shared_weights_buffer
#define OUTPUT_BUFFER_RESOURCE  _shared_output_buffer

// define a instance of the template.
// 32 - 16 - 16
#define FUNC_NAME                wmma_inline_matmul_glsl_32_16_16
#define W                        32
#define C                        16
#define O                        16
#include "matmul-template.glsli"
#undef O
#undef C
#undef W
#undef FUNC_NAME
// define a instance of the template.
// 16 - 32 - 16
#define FUNC_NAME                wmma_inline_matmul_glsl_16_32_16
#define W                        16
#define C                        32
#define O                        16
#include "matmul-template.glsli"
#undef O
#undef C
#undef W
#undef FUNC_NAME



#undef OUTPUT_BUFFER_RESOURCE 
#undef WEIGHTS_BUFFER_RESOURCE
#undef INPUT_BUFFER_RESOURCE  


#undef K 
#undef N 
#undef M

#undef MAX_INOUT_BUFFER_SIZE
#undef WEIGHTS_BUFFER_SIZE

#undef NUM_WARPS_PER_BLOCK
#undef NUM_THREAD_PER_BLOCK
#undef WARP_SIZE

#endif // _SRENDERER_GLSLI_MATMUL_HEADER_