#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_EXT_nonuniform_qualifier : enable
#extension GL_EXT_scalar_block_layout : enable
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_shader_explicit_arithmetic_types_int64 : require
#extension GL_EXT_buffer_reference2 : require

#include "../../include/common_descriptor_sets.h"
#include "common_custom_primitives.h"

void main()
{
    // ray data
    const vec3 ray_origin    = gl_WorldRayOriginEXT;
    const vec3 ray_direction = gl_WorldRayDirectionEXT;
    // Sphere data
    const int geometryID = gl_InstanceCustomIndexEXT + gl_GeometryIndexEXT;
    const GeometryInfo geometryInfo = geometryInfos[geometryID];
    const mat4 o2w = ObjectToWorld(geometryInfo);
    const vec3  sphere_center = (o2w * vec4(0,0,0,1)).xyz;
    const float sphere_radius = length((o2w * vec4(1,0,0,1)).xyz - sphere_center);
    // Sphere intersection
    const float tHit = hitSphere(sphere_center, sphere_radius, ray_origin, ray_direction);
    if(tHit > 0) reportIntersectionEXT(tHit, 1);
}