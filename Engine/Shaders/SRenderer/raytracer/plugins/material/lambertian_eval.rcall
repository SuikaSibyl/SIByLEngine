#version 460 core
#extension GL_EXT_ray_tracing           : enable
#extension GL_GOOGLE_include_directive  : enable

#include "../../include/common_trace.h"
#include "../../../include/plugins/material/lambertian_common.h"
#include "../../../../Utility/math.h"
#include "../../../../Utility/geometry.h"
#include "../../../../Utility/sampling.h"

layout(location = CALLABLE_LOC_BSDF_EVAL) callableDataInEXT BSDFEvalQuery cBSDFEvalQuery;

void main()
{
    // Sometimes the shading normal can be inconsistent with
    // the geometry normal. We flip the shading frame in that
    // case so that we don't produces "black fringes".
    mat3 frame = cBSDFEvalQuery.frame;
    if (dot(frame[2], cBSDFEvalQuery.dir_in) < 0) {
        frame = -frame;
    }
    
    // TODO :: MIPMAP stuff...
    cBSDFEvalQuery.bsdf = max(dot(frame[2], cBSDFEvalQuery.dir_out), 0) *
        texture(textures[lambertian_materials[cBSDFEvalQuery.mat_id].basecolor_opacity_tex], cBSDFEvalQuery.uv).rgb / k_pi;
    return;
}